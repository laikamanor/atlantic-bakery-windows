<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="backgroundWorker1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnRefresh.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABkAAAAZCAYAAADE6YVjAAAABGdBTUEAALGPC/xhBQAABCZJREFUSEut
        VltMm2UY/j3FaUyMNya6myVGbzzcYOIyL8Q42uIGDAbCWBywLbJQGBgTRRNNTdxaxqC0QpXWLYWySZm6
        CyPb2NAMWGn/Q2n/Huy6UiqFYv9yqBeCZcPP7/37la0zAml9kvfi/96nz9vv8B6orSBfO/ioRGnNkajG
        82VKS5lUZduT1zL2LHFnhxIN++YRg2OoweQJaq9Oz/fTwsol9xLSX59F5R1sHaFlhr2nrM9X6R2jup/D
        C/75O2gq/neaXfHG14PsUY4+VamzGw59NWG814o76M/KBgYeEgXvx4EuTlbf4552/74qCv4q3Ebn6Wji
        w35fSG50eY4aeL6q2xEsPm2rAr5MOb7j5I+TUU90FYFNRP5CtWf5mX2nrTmi4P0o03Cyjy/4o4HFNRTE
        AfQjM/Gabod9fwezH+6F0NIAQVoHQ3OpXRpGIsslaqaJuNNR3GZ7Ae8gAgECC2uoecAXKu1gDhH3fyIV
        5NbCHQQ2ubSGmvq8IekJ9hlCuYuqrx1j/FxC3EGz2TdboOV2EteGSB1XY69n6pPv/GHYDegcNjivEUoS
        Be30G53XwjEgfDMyFy/v4mqJa1NAkMJ22x9wB5Wd9uN91mgcdDRD00JR6/hrhEZRNXrHZR9+Rb7YbVTd
        7eDI8pYgab3xNOQQ+aTwDlg47qSW85K4mNPNPtJ0zhuA6P2MsFyopktER4YoUjOlA2xsGfSaTN6b4jN+
        W2V5uXM4PA+LH5l9U7mKX7YRfkYoULCPN5tvToEe1o1JTtx4iZIqLbJ+JrYKiw09bifhZoV6o4dPnkxs
        VaaySKkSNV09iEsFLNaedTGElxWOGV0M6P3kWkRi0kIkMxtLwKK818UTXlZo6PW4QO9bm7AiVY7vpmSt
        1lc6h2fW76Ss3fIY4WYEfKdPQCKDHqSFVEW/CIsPN5o8t2Dx/3hd72iZAxe45MkcN7n9oC86cJ4MQZ5A
        WagxONfvJa/F9irkAfncHAg9ALUulXM1eucg8eC33Ubv0lz9TTyyXmt0qULHySGDIZMhowltU1Rqufpz
        VoFkfFgoVDOvE1cSOOoIlGkg4Eocfr/PG4SatNUgRRp616ff+2fg985IAlXrncPEdRd7v7Bslxvdk1BF
        UxUVqutWgryrsx9TXAxEoJyA1Rn5IOgRdzpKtewHZ0ZnV+DfgG0UBCoD7hul753hredt0UXgiy3C7BMq
        NPa3CC0dB3XcTtz1FizBPxE9vSLa5xcDQioIJBV0ROiM9T0eNzzTH+zzCdgxBHDh8i7HHbVcy0pEwX8B
        v4qidrruYNdEy71W8aX95G4V+yRQoKdDb0/tMmXQctsuhxar9Y6x/FPsc6JepoAgMKXAtAJTC0wvjSb3
        5GE9f2WfmskltOwAcxbMWzB34SPMzcMTjUKBHiTuDUBR/wA/mCAY+q7FsgAAAABJRU5ErkJggg==
</value>
  </data>
</root>